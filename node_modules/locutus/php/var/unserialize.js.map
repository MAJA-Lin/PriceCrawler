{"version":3,"sources":["../../../src/php/var/unserialize.js"],"names":[],"mappings":"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","file":"unserialize.js","sourcesContent":["module.exports = function unserialize (data) {\n  //  discuss at: http://locutus.io/php/unserialize/\n  // original by: Arpad Ray (mailto:arpad@php.net)\n  // improved by: Pedro Tainha (http://www.pedrotainha.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Chris\n  // improved by: James\n  // improved by: Le Torbi\n  // improved by: Eli Skeggs\n  // bugfixed by: dptr1988\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: d3x\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Martin (http://www.erlenwiese.de/)\n  //    input by: kilops\n  //    input by: Jaroslaw Czarniak\n  //      note 1: We feel the main purpose of this function should be\n  //      note 1: to ease the transport of data between php & js\n  //      note 1: Aiming for PHP-compatibility, we have to translate objects to arrays\n  //   example 1: unserialize('a:3:{i:0;s:5:\"Kevin\";i:1;s:3:\"van\";i:2;s:9:\"Zonneveld\";}')\n  //   returns 1: ['Kevin', 'van', 'Zonneveld']\n  //   example 2: unserialize('a:2:{s:9:\"firstName\";s:5:\"Kevin\";s:7:\"midName\";s:3:\"van\";}')\n  //   returns 2: {firstName: 'Kevin', midName: 'van'}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  var utf8Overhead = function (chr) {\n    // http://locutus.io/php/unserialize:571#comment_95906\n    var code = chr.charCodeAt(0)\n    var zeroCodes = [\n      338,\n      339,\n      352,\n      353,\n      376,\n      402,\n      8211,\n      8212,\n      8216,\n      8217,\n      8218,\n      8220,\n      8221,\n      8222,\n      8224,\n      8225,\n      8226,\n      8230,\n      8240,\n      8364,\n      8482\n    ]\n    if (code < 0x0080 || code >= 0x00A0 && code <= 0x00FF || zeroCodes.indexOf(code) !== -1) {\n      return 0\n    }\n    if (code < 0x0800) {\n      return 1\n    }\n    return 2\n  }\n  var error = function (type,\n    msg, filename, line) {\n    throw new $global[type](msg, filename, line)\n  }\n  var readUntil = function (data, offset, stopchr) {\n    var i = 2\n    var buf = []\n    var chr = data.slice(offset, offset + 1)\n\n    while (chr !== stopchr) {\n      if ((i + offset) > data.length) {\n        error('Error', 'Invalid')\n      }\n      buf.push(chr)\n      chr = data.slice(offset + (i - 1), offset + i)\n      i += 1\n    }\n    return [buf.length, buf.join('')]\n  }\n  var readChrs = function (data, offset, length) {\n    var i, chr, buf\n\n    buf = []\n    for (i = 0; i < length; i++) {\n      chr = data.slice(offset + (i - 1), offset + i)\n      buf.push(chr)\n      length -= utf8Overhead(chr)\n    }\n    return [buf.length, buf.join('')]\n  }\n  var _unserialize = function (data, offset) {\n    var dtype\n    var dataoffset\n    var keyandchrs\n    var keys\n    var contig\n    var length\n    var array\n    var readdata\n    var readData\n    var ccount\n    var stringlength\n    var i\n    var key\n    var kprops\n    var kchrs\n    var vprops\n    var vchrs\n    var value\n    var chrs = 0\n    var typeconvert = function (x) {\n      return x\n    }\n\n    if (!offset) {\n      offset = 0\n    }\n    dtype = (data.slice(offset, offset + 1)).toLowerCase()\n\n    dataoffset = offset + 2\n\n    switch (dtype) {\n      case 'i':\n        typeconvert = function (x) {\n          return parseInt(x, 10)\n        }\n        readData = readUntil(data, dataoffset, ';')\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 1\n        break\n      case 'b':\n        typeconvert = function (x) {\n          return parseInt(x, 10) !== 0\n        }\n        readData = readUntil(data, dataoffset, ';')\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 1\n        break\n      case 'd':\n        typeconvert = function (x) {\n          return parseFloat(x)\n        }\n        readData = readUntil(data, dataoffset, ';')\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 1\n        break\n      case 'n':\n        readdata = null\n        break\n      case 's':\n        ccount = readUntil(data, dataoffset, ':')\n        chrs = ccount[0]\n        stringlength = ccount[1]\n        dataoffset += chrs + 2\n\n        readData = readChrs(data, dataoffset + 1, parseInt(stringlength, 10))\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 2\n        if (chrs !== parseInt(stringlength, 10) && chrs !== readdata.length) {\n          error('SyntaxError', 'String length mismatch')\n        }\n        break\n      case 'a':\n        readdata = {}\n\n        keyandchrs = readUntil(data, dataoffset, ':')\n        chrs = keyandchrs[0]\n        keys = keyandchrs[1]\n        dataoffset += chrs + 2\n\n        length = parseInt(keys, 10)\n        contig = true\n\n        for (i = 0; i < length; i++) {\n          kprops = _unserialize(data, dataoffset)\n          kchrs = kprops[1]\n          key = kprops[2]\n          dataoffset += kchrs\n\n          vprops = _unserialize(data, dataoffset)\n          vchrs = vprops[1]\n          value = vprops[2]\n          dataoffset += vchrs\n\n          if (key !== i) {\n            contig = false\n          }\n\n          readdata[key] = value\n        }\n\n        if (contig) {\n          array = new Array(length)\n          for (i = 0; i < length; i++) {\n            array[i] = readdata[i]\n          }\n          readdata = array\n        }\n\n        dataoffset += 1\n        break\n      default:\n        error('SyntaxError', 'Unknown / Unhandled data type(s): ' + dtype)\n        break\n    }\n    return [dtype, dataoffset - offset, typeconvert(readdata)]\n  }\n\n  return _unserialize((data + ''), 0)[2]\n}\n"]}